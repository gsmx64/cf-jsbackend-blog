# Todo-List-DevOps on Kubernetes

# NestJS Backend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-blog-backend
  namespace: cf-blog
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cf-blog-backend
  template:
    metadata:
      labels:
        app: cf-blog-backend
    spec:
      containers:
      - name: cf-blog-backend
        image: gsmx64/cf-blog-backend:latest
        env:
		      - name: APP_HOST
            value: "cf-blog-backend"
          - name: APP_PORT
            value: "82"
		      - name: APP_AUTH_SECRET
			      valueFrom:
              secretKeyRef:
                name: cf-blog-apisecret
                key: APP_AUTH_SECRET
          - name: APP_AUTH_HASH_SALT
            value: "10"
          - name: APP_AUTH_TOKEN_EXPIRATION
            value: "3600"
          - name: APP_AUTH_FACEBOOK_ENABLE
            valueFrom:
              secretKeyRef:
                name: "false"
                key: APP_AUTH_FACEBOOK_KEY
          - name: APP_AUTH_FACEBOOK_ENABLE
            valueFrom:
              secretKeyRef:
                name: cf-blog-facebookkey
                key: APP_AUTH_FACEBOOK_KEY
		      - name: APP_AUTH_FACEBOOK_SECRET
			      valueFrom:
              secretKeyRef:
                name: cf-blog-facebooksecret
                key: APP_AUTH_FACEBOOK_SECRET
          - name: APP_AUTH_GOOGLE_ENABLE
            valueFrom:
              secretKeyRef:
                name: "false"
                key: APP_AUTH_GOOGLE_ENABLE
          - name: APP_AUTH_GOOGLE_ID
            valueFrom:
              secretKeyRef:
                name: cf-blog-googleid
                key: APP_AUTH_GOOGLE_ID
          - name: APP_AUTH_GOOGLE_SECRET
            valueFrom:
              secretKeyRef:
                name: cf-blog-googlesecret
                key: APP_AUTH_GOOGLE_SECRET
          - name: APP_AUTH_TWITTER_ENABLE
            valueFrom:
              secretKeyRef:
                name: "false"
                key: APP_AUTH_TWITTER_ENABLE
          - name: APP_AUTH_TWITTER_ID
            valueFrom:
              secretKeyRef:
                name: cf-blog-twitterid
                key: APP_AUTH_TWITTER_ID
          - name: APP_AUTH_TWITTER_SECRET
            valueFrom:
              secretKeyRef:
                name: cf-blog-twittersecret
                key: APP_AUTH_TWITTER_SECRET
          - name: APP_DB_HOST
            valueFrom:
              secretKeyRef:
                name: cf-blog-postgresqlhost
                key: APP_DB_HOST
          - name: APP_DB_PORT
            valueFrom:
              secretKeyRef:
                name: cf-blog-postgresqlport
                key: APP_DB_PORT
          - name: APP_DB_USER
            valueFrom:
              secretKeyRef:
                name: cf-blog-postgresqluser
                key: APP_DB_USER
          - name: APP_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cf-blog-postgresqlpassword
                key: APP_DB_PASSWORD
          - name: APP_DB_NAME
            valueFrom:
              secretKeyRef:
                name: cf-blog-postgresqldatabase
                key: APP_DB_NAME
          - name: APP_DB_SCHEMA
            valueFrom:
              secretKeyRef:
                name: cf-blog-postgresqlschema
                key: APP_DB_SCHEMA
          - name: APP_PAGINATION_DEFAULT_LIMIT
            value: "10"
          - name: APP_PAGINATION_MAX_LIMIT
            value: "100"
          - name: APP_LOGGING_ENABLE
            value: "false"
          - name: APP_CORS_PROD_WHITELIST
            valueFrom:
              secretKeyRef:
                name: cf-blog-corswhitelist
                key: APP_CORS_PROD_WHITELIST
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 82
        livenessProbe:
          httpGet:
            path: /api/settings/view
            port: 82
          initialDelaySeconds: 60
          timeoutSeconds: 5

---

# React Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cf-blog-frontend
  namespace: cf-blog
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cf-blog-frontend
  template:
    metadata:
      labels:
        app: cf-blog-frontend
    spec:
      containers:
      - name: cf-blog-frontend
        image: gsmx64/cf-blog-frontend:latest
        env:
          - name: APP_PORT
            value: "82"
          - name: VITE_APP_NAME
		        value: "CF-Blog"
          - name: VITE_APP_PORT
            value: "81"
          - name: VITE_API_PROTOCOL
            value: "http"
          - name: VITE_API_HOST
            value: "cf-blog-backend"
          - name: VITE_API_PORT
            value: "82"
          - name: VITE_API_PATH
            value: "/api"
          - name: VITE_API_TIMEOUT
            value: "1000"
          - name: VITE_DEV_API_DOCKER
            value: "false"
          - name: VITE_PROD_API_BY_PROXY
            value: ""
          - name: VITE_CORS_WITH_CREDENTIALS
            value: "false"
          - name: VITE_CORS_WITH_XSRF_TOKEN
            value: "true"
          - name: VITE_ZUSTAND_ENABLED
            value: "true"
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 81
        livenessProbe:
          httpGet:
            path: /
            port: 81
          initialDelaySeconds: 60
          timeoutSeconds: 5

---

# APP Backend Service
apiVersion: v1
kind: Service
metadata:
  name: cf-blog-backend-service
  namespace: cf-blog
spec:
  selector:
    app: cf-blog-backend
  type: LoadBalancer
  ports:
    - name: "http"
      port: 82
      targetPort: 82
      protocol: "TCP"

---

# APP Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: cf-blog-frontend-service
  namespace: cf-blog
spec:
  selector:
    app: cf-blog-frontend
  type: LoadBalancer
  ports:
    - name: "http"
      port: 81
      targetPort: 81
      protocol: "TCP"

---

# APP Ingress Service
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cf-blog-ingress-service
  namespace: todo-list
  annotations:
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    nginx.ingress.kubernetes.io/http2-push-preload: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "500m"
    nginx.ingress.kubernetes.io/proxy-pass-headers: "Location"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - cf-blog.line.pm
      secretName: cf-blog-tls
  rules:
    - host: cf-blog.line.pm
      http:
        paths:
          - path: '/api'
            pathType: Prefix
            backend:
              service:
                name: cf-blog-backend-service
                port:
                  number: 80
		  - path: '/'
            pathType: Prefix
            backend:
              service:
                name: cf-blog-frontend-service
                port:
                  number: 80
