
#events { worker_connections 1024; }

#error_log /var/log/nginx/error.log debug;

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        `` close;
	}

    upstream websocket {
		server cf-blog-backend; 
		#SERVER endpoint that handle ws:// connections
	}

    proxy_buffers 8 16k;
    proxy_buffer_size 32k;

    error_page 404 /404;
    error_page 500 /500;

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        #server_name cf-blog-reverse-proxy;

        # Max file size useful for file uploading
        client_max_body_size 8M;

        location / {
            # NGINX acting as reverse proxy for frontend
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_pass http://cf-blog-frontend;
        }

        location /404 {
            # NGINX acting as reverse proxy for frontend
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_pass http://cf-blog-frontend/404;
        }

        location /500 {
            # NGINX acting as reverse proxy for frontend
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_pass http://cf-blog-frontend/500;
        }

        location ~ ^/(api|ws)/ {
            # Return 204 for preflight requests
            if ($request_method = OPTIONS) {
                return 204;
            }
            # NGINX acting as reverse proxy for backend
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header content-type "application/json";
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass http://cf-blog-backend:82;
        }
    }
	
	server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        #server_name cf-blog-reverse-proxy;

        ssl_certificate    /etc/ssl/default.crt;
        ssl_certificate_key    /etc/ssl/default.key;

        # Max file size useful for file uploading
        client_max_body_size 8M;

        location / {
            # NGINX acting as reverse proxy for frontend
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_pass https://cf-blog-frontend;
        }

        location /404 {
            # NGINX acting as reverse proxy for frontend
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_pass https://cf-blog-frontend/404;
        }

        location /500 {
            # NGINX acting as reverse proxy for frontend
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_pass https://cf-blog-frontend/500;
        }

        location ~ ^/(api|ws)/ {
            # Return 204 for preflight requests
            if ($request_method = OPTIONS) {
                return 204;
            }
            # NGINX acting as reverse proxy for backend
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header content-type "application/json";
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            #proxy_pass https://cf-blog-backend:4432;
            proxy_pass http://cf-blog-backend:82; #Using HTTP API for now
        }
    }
}