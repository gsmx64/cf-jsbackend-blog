services:
  cf-blog-database:
    image: postgres:15.5
    container_name: ${APP_DATABASE_HOST}
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${APP_DB_NAME}
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
    ports:
      - ${APP_DATABASE_PORT}:5432
    networks:
      - network-cf-blog
    volumes:
      - database-cf-blog:/var/lib/postgresql/data

  cf-blog-backend:
    image: gsmx64/cf-blog-backend:${APP_BUILD_NUMBER}
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: ${APP_BACKEND_HOST}
    restart: unless-stopped
    env_file:
      - ./.env
      - ./backend/.env.production
    environment:
      - NODE_ENV=production
      - APP_HOST=${APP_HOST}
      - APP_PORT=${APP_PORT}
      - APP_AUTH_SECRET=${APP_AUTH_SECRET}
      - APP_AUTH_HASH_SALT=${APP_AUTH_HASH_SALT}
      - APP_AUTH_TOKEN_EXPIRATION=${APP_AUTH_TOKEN_EXPIRATION}
      - APP_AUTH_FACEBOOK_ENABLE=${APP_AUTH_FACEBOOK_ENABLE}
      - APP_AUTH_FACEBOOK_KEY=${APP_AUTH_FACEBOOK_SECRET}
      - APP_AUTH_FACEBOOK_SECRET=${APP_AUTH_FACEBOOK_SECRET}
      - APP_AUTH_GOOGLE_ENABLE=${APP_AUTH_GOOGLE_ENABLE}
      - APP_AUTH_GOOGLE_ID=${APP_AUTH_GOOGLE_ID}
      - APP_AUTH_GOOGLE_SECRET=${APP_AUTH_GOOGLE_SECRET}
      - APP_AUTH_TWITTER_ENABLE=${APP_AUTH_TWITTER_ENABLE}
      - APP_AUTH_TWITTER_ID=${APP_AUTH_TWITTER_ID}
      - APP_AUTH_TWITTER_SECRET=${APP_AUTH_TWITTER_SECRET}
      - APP_DB_HOST=${APP_DB_HOST}
      - APP_DB_PORT=${APP_DB_PORT}
      - APP_DB_NAME=${APP_DB_NAME}
      - APP_DB_SCHEMA=${APP_DB_SCHEMA}
      - APP_DB_USER=${APP_DB_USER}
      - APP_DB_PASSWORD=${APP_DB_PASSWORD}
      - APP_PAGINATION_DEFAULT_LIMIT=${APP_PAGINATION_DEFAULT_LIMIT}
      - APP_PAGINATION_MAX_LIMIT=${APP_PAGINATION_MAX_LIMIT}
      - APP_LOGGING_ENABLE=${APP_LOGGING_ENABLE}
      - APP_CORS_PROD_WHITELIST=${APP_CORS_PROD_WHITELIST}
    depends_on:
      - cf-blog-database
    networks:
      - network-cf-blog
    volumes:
      - ./node_modules:/home/app/node_modules

  cf-blog-frontend:
    image: gsmx64/cf-blog-frontend:${APP_BUILD_NUMBER}
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: ${APP_FRONTEND_HOST}
    restart: unless-stopped
    env_file:
      - ./.env
      - ./backend/.env.production
    environment:
      - NODE_ENV=production
      - VITE_APP_NAME=${VITE_APP_NAME}
      - VITE_APP_PORT=${VITE_APP_PORT}
      - VITE_API_PROTOCOL=${VITE_API_PROTOCOL}
      - VITE_API_HOST=${VITE_API_HOST}
      - VITE_API_PORT=${VITE_API_PORT}
      - VITE_API_PATH=${VITE_API_PATH}
      - VITE_API_TIMEOUT=${VITE_API_TIMEOUT}
      - VITE_DEV_API_DOCKER=${VITE_DEV_API_DOCKER}
      - VITE_PROD_API_BY_PROXY=${VITE_PROD_API_BY_PROXY}
      - VITE_CORS_WITH_CREDENTIALS=${VITE_CORS_WITH_CREDENTIALS}
      - VITE_CORS_WITH_XSRF_TOKEN=${VITE_CORS_WITH_XSRF_TOKEN}
      - VITE_ZUSTAND_ENABLED=${VITE_ZUSTAND_ENABLED}
    depends_on:
      - cf-blog-database
      - cf-blog-backend
    networks:
      - network-cf-blog
    volumes:
      - ./frontend/nginx.default.conf:/etc/nginx/conf.d/default.conf
      #- ./frontend/default.pem:/etc/ssl/default.pem
      #- ./frontend/default.key:/etc/ssl/default.key

  cf-blog-reverse-proxy:
    image: gsmx64/cf-blog-reverse-proxy:${APP_BUILD_NUMBER}
    build:
      context: ./reverse-proxy
      dockerfile: Dockerfile.prod
    container_name: ${APP_PROXY_HOST}
    restart: unless-stopped
    env_file:
      - ./.env
      - ./frontend/.env.production
    environment:
      - NODE_ENV=production
    depends_on:
      - cf-blog-database
      - cf-blog-backend
      - cf-blog-frontend
    ports:
      - ${APP_PROD_HTTP_PORT}:80
      - ${APP_PROD_HTTPS_PORT}:443
    networks:
      - network-cf-blog
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
      #- ./reverse-proxy/default.pem:/etc/ssl/default.pem
      #- ./reverse-proxy/default.key:/etc/ssl/default.key

networks:
  network-cf-blog:

volumes:
  database-cf-blog:
    driver: local