services:
  cf-blog-database:
    image: postgres:15.5
    container_name: ${DOCKER_DATABASE_HOST}
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
      PGPORT: ${APP_DB_PORT}
      POSTGRES_DB: ${APP_DB_NAME}
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
    ports:
      - ${DOCKER_DATABASE_PORT}:${APP_DB_PORT}
    networks:
      - network-cf-blog
    volumes:
      - database-cf-blog:/var/lib/postgresql/data

  cf-blog-backend:
    image: gsmx64/cf-blog-backend:latest
    container_name: ${DOCKER_BACKEND_HOST}
    restart: unless-stopped
    env_file:
      - ./backend/.env.production
    environment:
      - NODE_ENV=production
    ports:
      - ${DOCKER_BACKEND_PORT}:${APP_BACKEND_PORT}
    depends_on:
      - cf-blog-database
    networks:
      - network-cf-blog
    #volumes:
    #  - ./node_modules:/home/app/node_modules

  cf-blog-frontend:
    image: gsmx64/cf-blog-frontend:latest
    container_name: ${DOCKER_FRONTEND_HOST}
    restart: unless-stopped
    env_file:
      - ./.env
      - ./frontend/.env.production
    environment:
      - NODE_ENV=production
    depends_on:
      - cf-blog-backend
    ports:
      - ${DOCKER_FRONTEND_PORT}:${APP_FRONTEND_PORT}
    networks:
      - network-cf-blog

  cf-blog-reverse-proxy:
    image: gsmx64/cf-blog-reverse-proxy:latest
    container_name: ${DOCKER_PROXY_HOST}
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
    depends_on:
      - cf-blog-backend
      - cf-blog-frontend
    ports:
      - ${DOCKER_APP_HTTP_PORT}:${DOCKER_APP_HTTP_PORT}
      - ${DOCKER_APP_HTTPS_PORT}:${DOCKER_APP_HTTPS_PORT}
    networks:
      - network-cf-blog
    #volumes:
      #- ./reverse-proxy/default.pem:/etc/ssl/default.pem
      #- ./reverse-proxy/default.key:/etc/ssl/default.key

networks:
  network-cf-blog:
