version: '3.9'

services:
  db:
    image: postgres:15.5
    container_name: ${APP_DB_HOST}
    restart: always
    env_file:
      - ./.env
      - ./backend/.env.development
    environment:
      POSTGRES_DB: ${APP_DB_NAME}
      POSTGRES_USER: ${APP_DB_USER}
      POSTGRES_PASSWORD: ${APP_DB_PASSWORD}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - ${APP_DB_PORT}:5432

  backend:
    container_name: ${APP_BACKEND_HOST}
    env_file:
      - ./.env
      - ./backend/.env.development
    command: npm run start:dev
    depends_on:
      - db
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - ${APP_BACKEND_PORT}:3001
    restart: always
    volumes:
      - .:/application
      - ./node_modules:/application/node_modules

  frontend:
    container_name: ${APP_FRONTEND_HOST}
    env_file:
      - ./.env
      - ./frontend/.env.development
    command: npm run start:dev
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - ${APP_FRONTEND_PORT}:3000
    restart: always
    volumes:
      - .:/application
      - ./node_modules:/application/node_modules